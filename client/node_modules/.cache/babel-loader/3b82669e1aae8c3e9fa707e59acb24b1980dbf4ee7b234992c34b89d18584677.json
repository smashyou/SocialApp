{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  mode: \"light\",\n  user: null,\n  token: null,\n  posts: []\n};\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setMode: state => {\n      state.mode = state.mode === \"light\" ? \"dark\" : \"light\";\n    },\n    setLogin: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    },\n    setLogout: state => {\n      state.user = null;\n      state.token = null;\n    },\n    setFriends: (state, action) => {\n      if (state.user) {\n        state.user.friends = action.payload.friends;\n      } else {\n        console.log(\"user friends non-existant :(\");\n      }\n    },\n    setPosts: (state, action) => {\n      const updatedPosts = state.posts.map(post => {\n        if (post.id === action.payload.post_id) return action.payload.post;\n        return post;\n      });\n      state.posts = updatedPosts;\n    }\n  }\n});\nexport const {\n  setMode,\n  setLogin,\n  setLogout,\n  setFriends,\n  setPosts,\n  setPost\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","mode","user","token","posts","authSlice","name","reducers","setMode","state","setLogin","action","payload","setLogout","setFriends","friends","console","log","setPosts","updatedPosts","map","post","id","post_id","setPost","actions","reducer"],"sources":["/Users/jryu/Desktop/React Projects/SocialApp/client/src/state/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  mode: \"light\",\n  user: null,\n  token: null,\n  posts: [],\n};\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setMode: (state) => {\n      state.mode = state.mode === \"light\" ? \"dark\" : \"light\";\n    },\n    setLogin: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    },\n    setLogout: (state) => {\n      state.user = null;\n      state.token = null;\n    },\n    setFriends: (state, action) => {\n      if (state.user) {\n        state.user.friends = action.payload.friends;\n      } else {\n        console.log(\"user friends non-existant :(\");\n      }\n    },\n    setPosts: (state, action) => {\n      const updatedPosts = state.posts.map((post) => {\n        if (post.id === action.payload.post_id) return action.payload.post;\n        return post;\n      });\n      state.posts = updatedPosts;\n    },\n  },\n});\n\nexport const { setMode, setLogin, setLogout, setFriends, setPosts, setPost } =\n  authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGN,WAAW,CAAC;EACnCO,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAE;IACRC,OAAO,EAAGC,KAAK,IAAK;MAClBA,KAAK,CAACR,IAAI,GAAGQ,KAAK,CAACR,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACxD,CAAC;IACDS,QAAQ,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC3BF,KAAK,CAACP,IAAI,GAAGS,MAAM,CAACC,OAAO,CAACV,IAAI;MAChCO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACC,OAAO,CAACT,KAAK;IACpC,CAAC;IACDU,SAAS,EAAGJ,KAAK,IAAK;MACpBA,KAAK,CAACP,IAAI,GAAG,IAAI;MACjBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB,CAAC;IACDW,UAAU,EAAE,CAACL,KAAK,EAAEE,MAAM,KAAK;MAC7B,IAAIF,KAAK,CAACP,IAAI,EAAE;QACdO,KAAK,CAACP,IAAI,CAACa,OAAO,GAAGJ,MAAM,CAACC,OAAO,CAACG,OAAO;MAC7C,CAAC,MAAM;QACLC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC7C;IACF,CAAC;IACDC,QAAQ,EAAE,CAACT,KAAK,EAAEE,MAAM,KAAK;MAC3B,MAAMQ,YAAY,GAAGV,KAAK,CAACL,KAAK,CAACgB,GAAG,CAAEC,IAAI,IAAK;QAC7C,IAAIA,IAAI,CAACC,EAAE,KAAKX,MAAM,CAACC,OAAO,CAACW,OAAO,EAAE,OAAOZ,MAAM,CAACC,OAAO,CAACS,IAAI;QAClE,OAAOA,IAAI;MACb,CAAC,CAAC;MACFZ,KAAK,CAACL,KAAK,GAAGe,YAAY;IAC5B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEX,OAAO;EAAEE,QAAQ;EAAEG,SAAS;EAAEC,UAAU;EAAEI,QAAQ;EAAEM;AAAQ,CAAC,GAC1EnB,SAAS,CAACoB,OAAO;AACnB,eAAepB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}